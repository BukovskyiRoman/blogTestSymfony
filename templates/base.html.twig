<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>{% block title %}Welcome!{% endblock %}</title>
    <link rel="icon"
          href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 128 128%22><text y=%221.2em%22 font-size=%2296%22>⚫️</text></svg>">
    {# Run `composer require symfony/webpack-encore-bundle` to start using Symfony UX #}
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">


</head>
<body>
<div style="width: 60%; max-width: 60%; margin-left: auto; margin-right: auto">
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <div class="container-fluid">
            <a class="navbar-brand" href="{{ path('post_index') }}">Blog</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                    data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link active" aria-current="page" href="{{ path('post_index') }}">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{{ path('user_profile') }}">Profile</a>
                    </li>

                    <li class="nav-item">
                        <a href="{{ path('login') }} " class="nav-link">Login</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{{ path('app_register') }}">Registration</a>
                    </li>
                    {% if is_granted('ROLE_ADMIN') %}
                        <li class="nav-item">
                            <a class="nav-link" href="{{ path('admin_panel') }}">Admin panel</a>
                        </li>
                    {% endif %}

                    <li class="nav-item">
                        <a class="nav-link" href="{{ path('app_logout') }}">Logout</a>
                    </li>
                </ul>
                <form class="d-flex">
                    <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
                    <button class="btn btn-outline-success" type="submit">Search</button>
                </form>
            </div>
        </div>
    </nav>
    {% block body %}{% endblock %}
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p"
        crossorigin="anonymous"></script>

<script type="text/javascript">
    function change() {
        let data = document.getElementById("hide");
        data.style.display = "none";

        document.getElementById("show").style.display = "block";
    }

    function cancel() {
        let data = document.getElementById("hide");
        data.style.display = "block";

        document.getElementById("show").style.display = "none";
    }

    //change user role
    function setAdmin(userId) {
        let request = new XMLHttpRequest();
        request.open("POST", `/admin/change_role/${userId}`, true)
        request.send("id=" + userId);
    }

    function likePost(postId, userId) {
        let xhr = new XMLHttpRequest();
        xhr.open("POST", '/like/post', true);
        xhr.setRequestHeader("Content-Type", "application/json");
        // xhr.onreadystatechange = function() {
        //     if (xhr.readyState !== 4 || xhr.status !== 200) {
        //         return;
        //     }
        //     const response = xhr.response;
        //     console.log(response);
        // }
        let data = {post_id: postId, user_id: userId};
        xhr.send(JSON.stringify(data));
    }

    const page_load_time = parseInt((new Date().getTime() / 1000).toFixed(0));

    async function subscribe() {


        let response = await fetch("/post/check", {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json;charset=utf-8'
            },
            body: JSON.stringify(page_load_time)
        });

        function showMessage(statusText) {
            console.log(statusText);
        }

        if (response.status === 502) {
            // Статус 502 - это таймаут соединения;
            // возможен, когда соединение ожидало слишком долго
            // и сервер (или промежуточный прокси) закрыл его
            // давайте восстановим связь
            await subscribe();
        } else if (response.status !== 200) {
            // Какая-то ошибка, покажем её
            showMessage(response.statusText);
            // Подключимся снова через  5 секунд.
            await new Promise(resolve => setTimeout(resolve, 5000));
            await subscribe();
        } else {
            // Получим и покажем сообщение
            let message = await response.status;
            showMessage(message);
            // И снова вызовем subscribe() для получения следующего сообщения
            await new Promise(resolve => setTimeout(resolve, 5000));
            await subscribe();
        }
    }

    subscribe();

</script>
</body>
</html>
